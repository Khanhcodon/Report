@model InCatalogValueModel
@{
    ViewBag.Title = "Quản lý chỉ tiêu";//Localizer("Bkav.eGovCloud.Areas.Admin.Category.List");
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var category = ViewBag.Category as IEnumerable<SelectListItem>;
}
<link href="~/Scripts/bkav.egov/libs/select2/select2.css" rel="stylesheet" />
<script src="~/Scripts/bkav.egov/libs/select2/select2.min.js"></script>
<script src="../../../../Scripts/bkav.egov/libs/jquery/jquery.validate.min.js"></script>
<script src="../../../../Scripts/bkav.egov/libs/jquery/jquery.validate.unobtrusive.min.js"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/bkav.egov/libs/jquery/jquery.fileupload/js/vendor/jquery.ui.widget.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/bkav.egov/libs/jquery/jquery.fileupload/js/jquery.fileupload.min.js")"></script>
<style>

    .select2-container .select2-selection--single,
    .select2-container--default .select2-selection--single .select2-selection__arrow {
        height: 35px;
    }

    .select2-container--default .select2-selection--single .select2-selection__rendered {
        line-height: 35px;
    }
    /* Handle */
    .panel {
        border-radius: 2px;
        border-color: #ddd;
        margin-bottom: 10px;
    }

    .box-form-ks .head {
        font-size: 22px;
        font-weight: bold;
        margin-bottom: 10px;
        line-height: 1.4;
        color: #194a6d;
        position: relative;
    }

    .main-wrap-drag .wrap {
        width: 100%;
    }

    .panel-heading {
        font-size: 16px;
        font-weight: bold;
        color: #202020;
        white-space: nowrap;
        border-radius: 2px;
        text-overflow: ellipsis;
        border-bottom: 1px solid #eee;
        padding: 10px 10px;
        padding-right: 30px;
        position: relative;
    }

    .main-wrap-drag .wrap:after {
        content: "";
        display: block;
        clear: both;
    }

    .sidebar-navtool {
        width: 100%;
        float: left;
        border-right: 1px solid #ddd;
        background: #fff;
        color: #fff;
        box-shadow: 0px 1px 3px rgba(0,0,0, 0.05);
    }

        .sidebar-navtool .top {
            padding: 10px 10px;
            background: #2c72bb;
        }

            .sidebar-navtool .top .form-control {
                background: rgba(0, 0, 0, 0.2);
                color: #fff;
                border: none;
            }

            .sidebar-navtool .top .select-custom:after {
                color: #fff;
            }

            .sidebar-navtool .top .select-custom:after {
                color: #fff;
            }

        .sidebar-navtool .search {
            position: relative;
            padding: 5px 10px;
        }

            .sidebar-navtool .search .form-control {
                padding: 5px 10px;
                height: auto;
                padding-right: 30px;
                background: none;
                border-radius: 0px;
                background: #f4f4f4;
                color: #333;
                box-shadow: none;
                border-radius: 3px;
            }

                .sidebar-navtool .search .form-control:focus {
                    background: #fff;
                }

            .sidebar-navtool .search .icon {
                width: 20px;
                height: 20px;
                text-align: center;
                line-height: 20px;
                position: absolute;
                top: 0px;
                right: 10px;
                bottom: 0px;
                margin: auto;
                pointer-events: none;
                opacity: 0.5;
                color: #aaa;
            }

        .sidebar-navtool > .top {
            padding: 10px 10px;
        }

        .sidebar-navtool .list {
            margin: 0px;
            padding: 0px;
        }

            .sidebar-navtool .list li {
                display: block;
            }

            .sidebar-navtool .list > li {
                border-bottom: 1px solid #ddd;
            }

            .sidebar-navtool .list li > a {
                display: block;
                padding: 10px 10px;
            }

                .sidebar-navtool .list li > a:hover {
                    text-decoration: none;
                    background: #f1f1f1;
                }



            .sidebar-navtool .list ul {
                background: rgba(255, 255, 255, 0.1);
                padding: 10px;
                display: none;
            }

                .sidebar-navtool .list ul li {
                    margin-bottom: 10px;
                }

                    .sidebar-navtool .list ul li > a {
                        border-radius: 3px;
                        background: #fff;
                        color: #242526;
                        position: relative;
                        padding-right: 30px;
                    }

                        .sidebar-navtool .list ul li > a .drag {
                            width: 30px;
                            height: 30px;
                            line-height: 30px;
                            text-align: center;
                            position: absolute;
                            top: 0px;
                            right: 0px;
                            bottom: 0px;
                            margin: auto;
                        }

            .sidebar-navtool .list > li > a {
                border-bottom: 1px solid rgba(255, 255, 255, 0.1);
                color: #222;
                position: relative;
                padding-left: 25px;
            }

            .sidebar-navtool .list > li.active > a {
                font-weight: bold;
                color: #022d52;
            }

    .itm-dd {
        border-radius: 3px;
        border-color: #ddd;
        border: 1px solid;
        background: #fff;
        color: #242526;
        position: relative;
        padding-right: 30px;
        display: block;
        padding: 10px 10px !important;
        z-index: 100
    }

        .itm-dd:hover {
            text-decoration: none;
        }

    .sidebar-navtool .list > li > a:before {
        content: "";
        top: 15px;
        left: 10px;
        border-right: none;
        border-bottom: 4px solid transparent;
        border-top: 4px solid transparent;
        border-left: 4px solid #222;
        position: absolute;
    }

    .sidebar-navtool .list > li.active > a:before {
        content: "";
        border-left: 4px solid transparent;
        border-right: 4px solid transparent;
        border-top: 4px solid #222;
    }

    .sidebar-navtool .list > li.active > ul {
        display: block;
        background: #f4f4f4;
    }

    .drag-content {
        width: 200px;
        padding: 10px;
        float: left;
        height: 100vh;
        background: #f2f3f2;
        border-right: 1px solid #ddd;
    }

        .drag-content .box {
            margin-bottom: 20px;
            background: none;
            border-top: 0px;
            box-shadow: none;
        }

        .drag-content .title {
            font-size: 12px;
            text-transform: uppercase;
            font-weight: bold;
            opacity: 0.8;
            margin-bottom: 10px;
        }

        .drag-content .content {
            border-radius: 2px;
            background: #fff;
            min-height: 160px;
            border: 1px dashed #a2a3a4;
        }

    .page-body-content {
        float: left;
        padding: 10px 20px;
        width: calc(100% - 600px);
    }

        .page-body-content .head {
            margin-bottom: 20px;
        }

            .page-body-content .head:after {
                display: block;
                content: "";
                clear: both;
            }

        .page-body-content .page-title {
            font-size: 18px;
        }

        .page-body-content .icon-edit {
            color: #999;
            cursor: pointer;
        }

            .page-body-content .icon-edit:hover {
                color: #2c72bb;
            }

    .nav-sidebar {
        width: 36px;
        height: 36px;
        line-height: 36px;
        text-align: center;
        position: fixed;
        background: #2c72bb;
        top: 20px;
        right: 0px;
        z-index: 30;
        color: #fff;
        cursor: pointer;
        font-size: 18px;
        display: none;
    }

    .overlay {
        position: fixed;
        top: 0px;
        left: 0px;
        cursor: pointer;
        right: 0px;
        bottom: 0px;
        background: rgba(255, 255, 255, 0.1);
        z-index: 10;
        display: none;
    }

        .overlay.show {
            display: block;
        }

    .sidebar-right-option {
        float: left;
        width: 200px;
        background: #fff;
        border-left: 1px solid #ddd;
        padding: 10px;
    }

        .sidebar-right-option .head {
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid #e5e5e5;
        }

            .sidebar-right-option .head .dropdown {
                margin-bottom: 10px;
            }

            .sidebar-right-option .head .btn {
                padding: 3px 10px;
                border-radius: 2px;
                box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.05);
                border: 1px solid #ccc;
                width: 100%;
                text-align: left;
                position: relative;
                padding-right: 30px;
            }

                .sidebar-right-option .head .btn:before {
                    content: "\f107";
                    padding: 3px 0px;
                    width: 20px;
                    background: #1e95da;
                    color: #fff;
                    text-align: center;
                    position: absolute;
                    border-radius: 0px 2px 2px 0px;
                    top: 0px;
                    right: 0px;
                    font-family: FontAwesome;
                }

        .sidebar-right-option .tabs {
            border-bottom: 1px solid #aaa;
            padding: 0px 5px;
        }

            .sidebar-right-option .tabs:after {
                content: "";
                display: block;
                clear: both;
            }

            .sidebar-right-option .tabs > li {
                float: left;
            }

                .sidebar-right-option .tabs > li > a {
                    padding: 7px 16px;
                    color: #666;
                    display: block;
                    border: 1px solid transparent;
                    position: relative;
                    border-bottom: 0px;
                }

                    .sidebar-right-option .tabs > li > a:hover {
                        color: #2c72bb;
                        text-decoration: none;
                    }

                .sidebar-right-option .tabs > li.active > a {
                    border-color: #aaa;
                    font-weight: bold;
                    color: #222;
                }

                    .sidebar-right-option .tabs > li.active > a:before {
                        content: "";
                        height: 1px;
                        position: absolute;
                        bottom: -1px;
                        background: #f2f3f2;
                        left: 0px;
                        right: 0px;
                    }

        .sidebar-right-option .tab-content {
            padding: 20px 10px;
        }

            .sidebar-right-option .tab-content .title {
                font-weight: bold;
                margin-bottom: 10px;
            }

    .check-action {
        position: relative;
    }

        .check-action .check {
            position: absolute;
            height: 100%;
            width: 100%;
            z-index: 10;
            opacity: 0;
        }

        .check-action .name {
            position: relative;
            min-height: 20px;
            display: block;
            padding-left: 25px;
        }

            .check-action .name:before {
                content: "";
                width: 16px;
                height: 16px;
                text-align: center;
                line-height: 14px;
                border-radius: 2px;
                position: absolute;
                top: 0px;
                font-family: ap;
                left: 0px;
                font-size: 10px;
                border: 1px solid #ccc;
            }

        .check-action .check:checked + .name:before {
            content: "\e70d";
            background: #4CAF50;
            color: #fff;
            border-color: rgba(0, 0, 0, 0.1);
        }

        .check-action input[type="radio"] + .name:before {
            border-radius: 50%;
            content: "";
        }

        .check-action input[type="radio"] + .name:after {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            top: 4px;
            background: none;
            content: "";
            left: 4px;
            position: absolute;
        }

        .check-action input[type="radio"]:checked + .name:after {
            background: #fff;
        }

    .form-control {
        width: 100%;
    }

    #btnFieldType {
        height: 35px;
    }
</style>
@Html.Partial("_Notifications")

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "myForm" }))
{
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken()
    <div class="main-wrapper-ioc">
        <div class="page-content" style="padding-bottom: 0px;">
            <div id="divMain" class="box-form-ks">
                <div id="lblHeader" class="head" style="padding-left: 10px; padding-top: 5px; padding-bottom: 5px;">
                    <div class="row">
                        <div class="col-sm-4 col-xs-12">
                            Quản lý chỉ tiêu
                            @*<div class="dropdown" style="position: absolute;left: 250px;top: 2px;" id="dropdownMenu">
                                    <button class="btn btn-lg glyphicon glyphicon-refresh" style="width: 40px;"></button>
                                    <div id="advMenu" class="dropdown-content" style="font-size: 12px;">
                                            <a href="#">
                                                <label for="btnAddSynForm" id="btnAddSynFormLB">
                                                    Liên thông HTBC
                                                    <button class="btn" id="btnAddSynForm" style="display: none;"></button>
                                                </label>
                                            </a>
                                        </div>
                                </div>*@
                        </div>
                        <div class="col-sm-4 col-xs-12">
                        </div>
                        <div class="col-sm-4 col-xs-12">
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-8">
                        <div class="panel">
                            <div class="panel-body">
                                <div class="control-label label-text" style="font-size: 16px; font-weight: bold; padding-top: 0;">Phân loại danh mục</div>
                                <div class="input col-md-14" style="padding-right: 0">
                                    <div class="select-custom col-md-16">
                                        @Html.DropDownListFor(model=>model.InCatalogId, category,
                                            new {@class = "form-control" , @id = "cboFIELD_TYPE" })
                                        @Html.ValidationMessageFor(model => model.InCatalogId)
                                    </div>
                                </div>
                                <div class="col-md-2" style="padding-left: 0">
                                    <button class="btn btn-primary" id="btnFieldType">
                                        ...
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="panel">
                            <!--<div class="panel-heading" id="ObjTitle"> Danh sách lĩnh vực</div> -->
                            <div class="panel-body" style="padding-top: 5px">
                                <div class="sidebar-navtool">
                                    <ul class="list" style="height: calc(100vh - 290px); overflow: auto;"></ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-8">
                        <div class="form-horizontal">
                            <div class="panel" id="divKpiGrIndi">
                                <div class="panel-heading" id="fieldTitle">Thông tin danh mục</div>
                                <div class="panel-body" style="height: calc(100vh - 210px); overflow: auto;">
                                    <div class="form-group">
                                        <div class="col-sm-3 col-xs-12">
                                            <div class="control-label label-text">Danh mục cha:</div>
                                        </div>
                                        <div class="col-sm-6 col-xs-12">
                                            <select class="col-sm-6 col-xs-12 form-control" style="height: 35px !important;" id="txtPARENT_ID" name="ParentId" tabindex="-1" aria-hidden="true"></select>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-sm-3 col-xs-12">
                                            <div class="control-label label-text">Tên danh mục:</div>
                                        </div>
                                        <div class="col-sm-6 col-xs-12">
                                            @Html.TextBoxFor(model => model.InCatalogValueName, new { @placeholder = "Tên danh mục", @id = "txtFIELD_NAME" })
                                            @*<input type="text" class="form-control" id="txtFIELD_NAME" name="InCatalogValueName" valrule="Tên danh mục,trim_required|max_length[255]" placeholder="Tên danh mục">*@
                                            @Html.ValidationMessageFor(model => model.InCatalogValueName)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-sm-3 col-xs-12">
                                            <div class="control-label label-text">Mã danh mục:</div>
                                        </div>
                                        <div class="col-sm-6 col-xs-12">
                                            @Html.TextBoxFor(model => model.InCatalogValueCode, new { @placeholder = "Mã danh mục", @id = "txtFIELD_CODE" })
                                            @*<input type="text" class="form-control" name="InCatalogValueCode" id="txtFIELD_CODE" valrule="Mã danh mục,trim_required|max_length[50]" placeholder="Mã danh mục">*@
                                            @Html.ValidationMessageFor(model => model.InCatalogValueCode)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-sm-1 col-xs-12"></div>
                                        <div class="col-sm-11 col-xs-12">
                                            <div class="listbuttons">
                                                <button class="btn btn-primary" id="btnRefresh">
                                                    <span class="-ap icon icon-reload"></span> Làm mới
                                                </button>
                                                <button class="btn btn-primary" id="btnAdd" data-action="IndicatorCatalog/Index">
                                                    <span class="-ap icon icon-plus3"></span> Thêm
                                                </button>
                                                <button class="btn btn-primary" id="btnEdit" data-action="IndicatorCatalog/Index">
                                                    <span class="-ap icon icon-pencil3"></span> Sửa
                                                </button>
                                                <button class="btn btn-primary" id="btnDelete" data-action="IndicatorCatalog/Delete">
                                                    <span class="-ap icon icon-trash"></span> Xóa
                                                </button>
                                               
                                                <label class="btn btn-primary" for="ImportData" id="lbImpIndJS" onclick="$('#ImportData').click()">
                                                    <input class="btn" type="file" name="files" id="ImportData" style="display: none;" data-url="@Url.Action("ImportData", "IndicatorCatalogValue")" />
                                                    <span class="-ap icon icon-cloud-upload"></span> Import Excel
                                                </label>
                                                <a href="/Reports/TemplateIndicatalog.xlsx" style="font-style: italic; color: #008ae6">
                                                    <span class="icon icon-download"></span> Download file mẫu
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                    <div id="tvChild" hidden="hidden" style="height: 380px; overflow: scroll;"></div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
    @Html.HiddenFor(model => model.InCatalogValueId)
    @Html.HiddenFor(model => model.Level)

}
<form id="formdelete" style="display: none" action="@Url.Action("Delete", new { Id = Model.InCatalogValueId })" method="POST">
    @Html.AntiForgeryToken()
    <input name="CatalogValueId" type="hidden" value="@Model.InCatalogValueId" />
</form>
<script type="text/javascript">
    $(function () {
        var catalogId = "@Model.InCatalogId";
        loadSelect2(catalogId);
        loadParent(catalogId);
        if ("@Model.InCatalogValueId" != "00000000-0000-0000-0000-000000000000")
            $("input[name='InCatalogValueId']").val("@Model.InCatalogValueId");
        $("#btnAdd").on("click",function (e) {
                e.preventDefault();
                var form = $('#myForm');
                $("input[name='InCatalogValueId']").val("00000000-0000-0000-0000-000000000000");
                form.submit();
        });
        $("#btnFieldType").on("click", function (e) {
                e.preventDefault();
            window.location.href = '/Admin/IndicatorCatalog';
        });
        $('#cboFIELD_TYPE').on('change', function(e) {
            $('.list').html('');
            var id = $(this).val();
            id = id == "" ? "00000000-0000-0000-0000-000000000000" : id;
            loadParent(id);
            loadSelect2(id);
        });
        $("#btnDelete").on("click",function (e) {
                e.preventDefault();
                var id = $("input[name='InCatalogValueId']").val();
            if (id != "00000000-0000-0000-0000-000000000000")
                deleteCatelog(id);
        });
        $('#btnRefresh').on('click', function (e) {
            e.preventDefault();
            refresh();
        });
        $('#ImportData').fileupload({
            dataType: 'json',
            add: function (e, data) {
                var filename = data.files[0].name;
                if (data.files.length > 0) {
                    if (filename.indexOf(".xlsx", filename - ".xlsx".length) !== -1) {
                        data.submit();
                    } else {
                        eGovMessage.show("Chỉ được chọn file xlsx","",eGovMessage.messageButtons.Ok);
                    }
                }
                else {
                    eGovMessage.show("chưa chọn file","",eGovMessage.messageButtons.Ok);
                }
                
            },
            done: function (e, data) {
                if (data.result.success) {
                    eGovMessage.show("@Localizer("Bkav.eGovCloud.Areas.Admin.IndicatorCatalogValue.Imported")",
                        "", eGovMessage.messageButtons.Ok, function() {
                            window.location.reload();
                        });
                } else {
                    eGovMessage.show("@Localizer("Bkav.eGovCloud.Areas.Admin.IndicatorCatalogValue.ImportFaild")",
                        "",
                        eGovMessage.messageButtons.Ok);
                }
                
            },
            fail: function (e, data) {
                //eGovMessage.show("@Localizer("Bkav.eGovCloud.Areas.Admin.IndicatorCatalogValue.ImportFaild")", "", eGovMessage.messageButtons.Ok);
                //$(".EmbryonicPath").text("@Localizer("Common.Error.DownloadFile")");
            }
        });
        //$('#lbImpIndJS').on('click', function (e) {
        //    //e.preventDefault();
        //    debugger;

        //});
    });
    function refresh(){
        $('#cboFIELD_TYPE').val('');
        $('#txtFIELD_NAME').val('');
        $('#txtFIELD_CODE').val('');
        $('#txtPARENT_ID').val('');
        loadParent("00000000-0000-0000-0000-000000000000");
        loadSelect2("00000000-0000-0000-0000-000000000000");
    }
    function loadParent(id) {
        var html = '';
        $.ajax({
            url: "/IndicatorCatalogValue/GetCatalogByCategory",
            data: { categoryId: id },
            type: 'post',
            success: (response) => {
                if (response.success) {
                    $.each(response.data, function (index, row) {
                        html += `<li class='listLi' id='${row.InCatalogValueId}' idValue='${row.InCatalogValueId}' loaded='0' expanded='0'><a href='javascript:void(0)' onclick='loadChild("${row.InCatalogValueId}")'>${row.InCatalogValueName}</a>`;
                        html+='</li>';
                    });
                    if(response.data.length > 0)
                      $('.list').html(html);
                }
            }
        });
    }
    function loadSelect2(id) {
        $.ajax({
            url: "/IndicatorCatalogValue/LoadSelect2",
            data: { catalogId: id },
            type: 'post',
            success: (response) => {
                if (response.success) {
                    var dataSelect = $.map(response.data, function (item) {
                        return {
                            text: item.text,
                            id: item.id
                        }
                    });
                    if (typeof dataSelect.isArray == 'undefined') {
                        dataSelect.unshift({ text: "", id: "" });
                    }
                    if ($('#txtPARENT_ID').hasClass("select2-hidden-accessible")) {
                        $('#txtPARENT_ID').select2('destroy').empty();
                    }
                    $('#txtPARENT_ID').select2({
                                        language: "vi",
                                        allowClear: true,
                                        placeholder: "",
                                        data: dataSelect
                    });
                    var parentId = "@Model.ParentId";
                    if ($('#txtPARENT_ID').find("option[value='" + parentId + "']").length) {
                        $('#txtPARENT_ID').val(parentId).trigger('change');
                    }
                }
            }
        });
    }
    function loadChild(id) {
        if (id != "") {

            $.ajax({
                url: "/IndicatorCatalogValue/LoadDataSelect",
                data: { id: id },
                type: 'post',
                success: (response) => {
                    if (response.success) {
                        var data = response.data;
                        $("input[name ='InCatalogValueId']").val(data.InCatalogValueId);
                        $("input[name ='CatalogValueId']").val(data.InCatalogValueId);
                        $("input[name ='InCatalogValueName']").val(data.InCatalogValueName);
                        $("input[name ='InCatalogValueCode']").val(data.InCatalogValueCode);
                        $("select[name ='InCatalogId']").val(data.InCatalogId);

                        if (data.ParentId && $('#txtPARENT_ID').find("option[value='" + data.ParentId + "']").length) {
                            $('#txtPARENT_ID').val(data.ParentId).trigger('change');
                        }
                        else
                            $('#txtPARENT_ID').val("").trigger('change');
                    }
                }
            });
            var html = '';
            var $this = $('#' + id);
            // xac dinh level selected
            var index = $('#' + id).parents('ul').length - 1; // -1 index to 0
            $("input[name ='Level']").val(index);
            if($this.attr("loaded")==0){
                $this.attr("loaded",1);
                $.ajax({
                    url: "/IndicatorCatalogValue/GetCatalogByCategoryChild",
                    data: { parentId: id },
                    type: 'post',
                    success: (response) => {
                        if (response.success) {
                            html = '<ul class="list">';
                            $.each(response.data, function (index, row) {
                                html += `<li class='listLi' id='${row.InCatalogValueId}' idValue='${row.InCatalogValueId}' loaded='0' expanded='0'><a href='javascript:void(0)' onclick='loadChild("${row.InCatalogValueId}")'>${row.InCatalogValueName}</a>`;
                                html+='</li>';
                            });
                            html += '</ul>';
                            if(response.data.length > 0)
                              $this.append(html);
                        }
                    }
                });
            }
            if($this.attr("expanded") == 0){
                $this.parent().children().removeClass('active');
                $this.parent().children().attr("expanded","0");
                $this.attr("expanded","1");
                $this.toggleClass('active');
            }
            else{
                $this.attr("expanded","0");
                $this.removeClass('active');
                $this.children().children().removeClass('active');
                id=$this.parent().parent('.active').attr("idValue");
            }
        }
    }
    function deleteCatelog(id) {
        eGovMessage.show(
            '@Html.Raw(Localizer("Bkav.eGovCloud.Areas.Admin.IndicatorCatalogValue.ConfirmDelete"))',null,eGovMessage.messageButtons.YesNo,function () {
                $("#formdelete").submit();
            }
        );
    }

</script>
