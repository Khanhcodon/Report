@model Bkav.eGovCloud.Models.NotifyInfoModel

@{
    Layout = null;
    var idx = 0;
}

<script src="@Url.Content("~/Scripts/bkav.egov/libs/jquery/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/bkav.egov/libs/jquery/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<style>
    .bootstrap-tagsinput {
        width: 100%;
    }

        .bootstrap-tagsinput input {
            display: none;
        }

    table {
        width: 100%;
    }

    .bmailFolders {
        max-height: 200px;
        overflow: auto;
    }

    .mail-list {
        height: 200px;
        overflow: auto;
        background: #e3e3e3;
    }

    .config-app {
        padding-left: 15px;
    }
</style>
<script type="text/javascript">
    $(function () {
        $('input.input-validation-error').first().focus();

        $("form").submit(function () {
            var mailFolders = "";
            $(".bmailFolders input:checked").each(function () {
                mailFolders += "," + $(this).val();
            });

            $("#MailFolderNotify").val(mailFolders);
            $(this).find('input.input-validation-error').first().focus();
            return;
        });

        $(".chkActive").change(function () {
            var $tr = $(this).closest("tr");
            var deviceId = $tr.attr("deviceid");
            $.ajax({
                url: "Account/ActiveDevice",
                type: "POST",
                data: { deviceId: deviceId }
            });
        });

        $(".config-app :checkbox").change(function () {
            $(this).val($(this).prop("checked"));
        });

        var currentMailList = '@Model.MailFolderNotify'.split(',');
        var bmailFolders = parseBmailFolders(currentMailList);
        $(".bmailFolders").html($.tmpl($("#mailList"), bmailFolders));

        $(document).bindResources();
    });

    function parseBmailFolders(currentMailList) {
        var result, bmailFolders;

        result = [];
        bmailFolders = getBmailFolder();

        if (bmailFolders == undefined || bmailFolders.length === 0) {
            return result;
        }

        var privateFolders = bmailFolders.folder;
        var publishFolders = bmailFolders.link;

        if (privateFolders != undefined) {
            _.each(privateFolders, function (f) {
                if (f.view === "message") {
                    result.push({
                        path: f.absFolderPath,
                        name: parseMailFolderName(f.name),
                        checked: _.contains(currentMailList, f.absFolderPath),
                        children: getFolderChildren(f, currentMailList)
                    });
                }
            });
        }

        if (publishFolders != undefined) {
            _.each(publishFolders, function (f) {
                if (f.view === "message") {
                    result.push({
                        path: f.absFolderPath,
                        name: parseMailFolderName(f.name),
                        checked: _.contains(currentMailList, f.absFolderPath),
                        children: getFolderChildren(f, currentMailList)
                    });
                }
            });
        }

        return result;
    }

    function getBmailFolder() {
        var result, frameApp;
        if ($("iframe#bmail").length > 0) {
            frameApp = $("iframe#bmail")[0].contentWindow;
        }

        if (frameApp == undefined || (typeof frameApp.getBmailFolders !== "function")) {
            return result;
        }

        result = frameApp.getBmailFolders();

        return result;
    }

    function getFolderChildren(parentFolder, currentMailList) {
        var result = [], children = parentFolder.folder,
            i, leng, child, f;

        if (children === undefined || children.length === 0) {
            return result;
        }

        leng = children.length;
        for (i = 0; i < leng; i++) {
            f = children[i];
            if (f.view === "message") {
                child = {
                    path: f.absFolderPath,
                    name: parseMailFolderName(f.name),
                    checked: _.contains(currentMailList, f.absFolderPath),
                    children: getFolderChildren(f, currentMailList)
                }

                result.push(child);
            }
        }

        return result;
    }

    function parseMailFolderName(name) {
        if (name === "Inbox") {
            return "Hộp thư đến";
        }

        if (name === "Sent") {
            return "Hộp thư đi";
        }

        if (name === "Junk") {
            return "Thư đã xóa";
        }

        if (name === "Drafts") {
            return "Thư rác";
        }

        return name;
    }

</script>

<div class="Hb qd" style="max-width: 700px">
    @using (Ajax.BeginForm("NotifySettings", "Account", new AjaxOptions
    {
        HttpMethod = "POST",
        UpdateTargetId = "menuRight",
        OnSuccess = "onSuccess"
    }, new { refreshPage = true }))
    {
        @Html.ValidationSummary(true)
        @Html.AntiForgeryToken()

        <div>
            <h4>Thiết lập chung</h4>
        </div>
        <div class="config-app">
            <div class="checkbox">
                <label>
                    @Html.EditorFor(m => m.RemoveRead)
                    Tự động xóa thông báo đã đọc.
                </label>
            </div>
            <div class="checkbox">
                <label>
                    @Html.EditorFor(m => m.HasShowDesktop)
                    Hiển thị thông báo desktop.
                </label>
            </div>
            <div class="checkbox">
                <label>
                    @Html.EditorFor(m => m.HasPlaySound)
                    Bật âm thanh thông báo
                </label>
            </div>
        </div>
        <div>
            <h4>Xử lý văn bản</h4>
        </div>
        <div class="config-app">
            <div class="checkbox">
                <label>
                    @Html.EditorFor(m => m.HasShowDocumentNotify)
                    Hiển thị thông báo.
                </label>
            </div>
            <div><b>Mục nhận thông báo</b></div>
            <label class="radio-inline">
                <input type="radio" name="DocumentNotifyType" id="DocumentNotifyType" value="1" @(Model.DocumentNotifyType == 1 ? "checked" : "")>
                Hồ sơ, Văn bản chờ xử lý
            </label>
            <label class="radio-inline">
                <input type="radio" name="DocumentNotifyType" id="DocumentNotifyType" value="2" @(Model.DocumentNotifyType == 2 ? "checked" : "")>
                Tất cả hồ sơ, văn bản tham gia xử lý
            </label>
        </div>


        <div>
            <h4>Trao đổi</h4>
        </div>
        <div class="config-app">
            <div class="checkbox">
                <label>
                    @Html.EditorFor(m => m.HasShowChatNotify)
                    Hiển thị thông báo.
                </label>
            </div>
        </div>

        <div>
            <h4>Điều hành</h4>
        </div>
        <div class="config-app">
            <div class="checkbox">
                <label>
                    @Html.EditorFor(m => m.HasShowMailNotify)
                    Hiển thị thông báo.
                </label>
            </div>
            <div>
                <b>Mục tin nhận thông báo:</b>
            </div>
            <div class="mail-list">
                <input type="hidden" name="MailFolderNotify" id="MailFolderNotify" value="@Model.MailFolderNotify" />
                <table class="bmailFolders table table-hover">
                    <colgroup>
                        <col />
                        <col style="width: 100px;" />
                    </colgroup>
                    <thead>
                        <tr>
                            <th class="text-left">Tên thư mục</th>
                            <th class="text-center">Thông báo</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    }
</div>

<script type="text/x-jquery-tmpl" id="mailList" name="mailList">
    <tr>
        <td style="font-size:13px">${name}</td>
        <td class="text-center"><input type="checkbox" value="${path}" {{if checked}} checked{{/if}} /></td>
    </tr>
    {{if children }}
    {{each(i, child) children}}
    <tr>
        <td style="padding-left: 30px;">
            ${child.name}
        </td>
        <td class="text-center"><input type="checkbox" value="${child.path}" {{if checked}} checked{{/if}} /></td>
    </tr>
    {{each(i, child1) child.children}}
    <tr>
        <td style="padding-left: 30px;">
            ${child1.name}
        </td>
        <td class="text-center"><input type="checkbox" value="${child1.path}" {{if checked}} checked{{/if}} /></td>
    </tr>
    {{/each}}
    {{/each}}
    {{/if}}
</script>