@model DocTypeFormModel
@{
    var isCreate = new Guid().CompareTo(@Model.Form.FormId) == 0;
}

<script src="@Url.Content("~/Scripts/bkav.egov/libs/jquery/jquery.validate.min.js")"></script>
<script src="@Url.Content("~/Scripts/bkav.egov/libs/jquery/jquery.validate.unobtrusive.min.js")"></script>

<!--Jquery FileUpload-->
<script type="text/javascript" src="@Url.Content("~/Scripts/bkav.egov/libs/jquery/jquery.fileupload/js/vendor/jquery.ui.widget.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/bkav.egov/libs/jquery/jquery.fileupload/js/jquery.fileupload.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/bkav.egov/libs/jquery/jquery.fileupload/js/jquery.iframe-transport.js")"></script>
<script src="@Url.Content("~/Scripts/bkav.egov/libs/jquery.fileDownload.js")"></script>

<script type="text/javascript">
    $(function () {
        $("#FormName").focus();

        $('#upload').fileupload({
            dataType: 'json',
            add: function (e, data) {
                var filename = data.files[0].name;
                if (filename.indexOf(".xlsx", filename - ".xlsx".length) !== -1) {
                    $(".EmbryonicPath").text(filename);
                    data.submit();
                }
                else {
                    eGovMessage.show("Chỉ được up file xlsx",
                        "", eGovMessage.messageButtons.Ok);
                }
            },
            done: function (e, data) {
                var result = data.result[0];
                $("#EmbryonicPath").val(result.name);
                $("#EmbryonicLocationName").val(result.key);
            },
            fail: function (e, data) {
                $(".EmbryonicPath").text("@Localizer("Common.Error.DownloadFile")");
            }
        });
        $("#createETL").click(function (e) {
            var comment = $("#Description").val();
            $.ajax({
                url: "/Admin/form/CreateETL?id=" + "@Model.Form.FormId" + "&comment=" + comment,
                type: 'GET',
                data: {}
            }).done(function (result) {
                if (result.succress) {
                    $.notify({
                        message: "Tạo bảng mới thành công"
                    }, {
                        type: 'success',
                        placement: {
                            from: "bottom",
                            align: "right"
                        }
                    });
                    location.href = "/Admin/docType/Edit/" + "@Model.DocType.DocTypeId";
                }
                else {
                    $.notify({
                        message: result.message
                    }, {
                        type: 'danger',
                        placement: {
                            from: "bottom",
                            align: "right"
                        }
                    });
                }
            });
        })
        $("#createFormMobile").click(function (e) {
            $.ajax({
                url: "/Admin/form/CreateFormMobile?id=" + "@Model.Form.FormId",
                type: 'GET',
                data: {}
            }).done(function (result) {
                $.notify({
                    message: "Tạo bảng mới thành công"
                }, {
                    type: 'success',
                    placement: {
                        from: "bottom",
                        align: "right"
                    }
                });
                    location.href = "/Admin/docType/Edit/" + "@Model.DocType.DocTypeId";
            });
        })
        
        $("#deleteForm").click(function (e) {
            
            eGovMessage.show(
                '@Html.Raw(Localizer("Bkav.eGovCloud.Areas.Admin.Form.ConfirmDelete"))',
                null,
                eGovMessage.messageButtons.YesNo,
                function () {
            $.ajax({
                url: "/Admin/doctype/DeleteFormNRef?id=" + "@Model.Form.FormId" + "&docTypeId=" + "@Model.DocType.DocTypeId",
                type: 'GET',
                data: {}
            }).done(function (result) {
                if (result.success) {
                $.notify({
                    message: "Xóa biểu mẫu thành công"
                }, {
                    type: 'success',
                    placement: {
                        from: "bottom",
                        align: "right"
                    }
                });
                    location.href = "/Admin/docType/Edit/" + "@Model.DocType.DocTypeId";
                }
            });
                }
            );
        })
    })

    function download(id) {
        var link = '@Url.Action("DownloadEmbryonicFileBase64", "Attachment", new { area = "" })/' + id;
        $.fileDownload(link, {
            failCallback: function (response) {
                var html = $(response);
                try {
                    var json = JSON.parse(html.text());
                    alert(json.error);
                } catch (e) {
                    alert('"@Localizer("Common.Error.DownloadFile")"');
                }
            }
        });
    }

    function openConfigEmbryonic(formId) {
        $("#configEmbryonicForm").removeClass('hidden');
        $("#configEmbryonicForm").dialog({
            width: 1100,
            height: 600,
            title: "Cấu hình mẫu báo cáo",
            buttons: [
                {
                    text: "Đóng",
                    click: function () {
                        var editor = $("#ereport")[0];
                        editor.contentWindow.docEditor.destroyEditor();
                        eGovMessage.show("Đang xử lý ...");
                        setTimeout(function () {
                            $("#configEmbryonicForm").dialog("close");
                            // location.reload();
                        }, 5000);
                    }
                }
            ]
        });
    }


</script>

@Html.HiddenFor(model => model.Form.FormId)

<table>
    <tr>
        <td style="width: 20%;">
            @Html.LabelFor(model => model.Form.FormGroupId)
        </td>
        <td>
            @Html.DropDownListFor(model => model.Form.FormGroupId, new SelectList(ViewBag.FormGroupIds, "Value", "Text"))
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.Form.FormTypeId)
        </td>
        <td>
            @Html.DropDownListFor(model => model.Form.FormTypeId, new SelectList(ViewBag.FormTypeIds, "Value", "Text"))
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelRequireFor(model => model.Form.FormName)
        </td>
        <td>
            @Html.TextAreaFor(model => model.Form.FormName, new Dictionary<string, object>() {
                                                    { "class", "egovQtip" },
                                                    { "data-qtip", ".tooltipPacket" } })
            @if (Model.Form.FormId == Guid.Empty)
            {
                <div>
                    <p>@Html.Raw(Localizer("Admin.Common.CreatePacket"))</p>
                </div>}
            @Html.ValidationMessageFor(model => model.Form.FormName)
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.Form.Description)
        </td>
        <td>
            @Html.TextBoxFor(model => model.Form.Description, new { @class = "form-control", @placeholder = Model.Form.EmbryonicPath })
        </td>
    </tr>
    <tr class="txtFormUrl hidden">
        <td>
            @Html.LabelFor(model => model.Form.FormUrl)
        </td>
        <td>
            @Html.TextBoxFor(model => model.Form.FormUrl, new { style = "display:inline" })
        </td>
    </tr>
    <tr class="hidden">
        <td>
            @Html.LabelFor(model => model.Form.ConfigForm)
        </td>
        <td>
            @Html.TextBoxFor(model => model.Form.ConfigForm, new { style = "display:inline" })
        </td>
    </tr>
    <tr class="">
        <td>
            @Html.LabelRequireFor(model => model.Form.Json)
        </td>
        <td>
            @Html.TextAreaFor(model => model.Form.Json)
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.Form.IsActivated)
        </td>
        <td>
            @Html.RadioButtonFor(model => model.Form.IsActivated, 1)
            Sử dụng
            @Html.RadioButtonFor(model => model.Form.IsActivated, 2)
            Không Sử dụng
        </td>
    </tr>

    <tr class="hidden">
        <td>
            @Html.LabelRequireFor(model => model.Form.FormCode)
        </td>
        <td>
            @Html.TextAreaFor(model => model.Form.FormCode)
        </td>
    </tr>
    @if (Model.Form.FormId != Guid.Empty)
    {
        <tr>
            <td style="padding-top: 20px">
                <b>Cấu hình mẫu báo cáo</b>
            </td>
            <td></td>
        </tr>
        <tr>
            <td>
                Mẫu báo cáo
            </td>
            <td>
                <span class="EmbryonicPath">@Model.Form.EmbryonicPath</span>
                <div style="display:none">
                    <input type="text" name="EmbryonicPath" id="EmbryonicPath" />
                    <input type="text" name="EmbryonicLocationName" id="EmbryonicLocationName" />
                </div>
            </td>
        </tr>
        <tr>
            <td></td>
            <td>
                <input class="btn btn-primary" type="button" value="Tải lên" onclick="$('#upload').click()" />
                <input class="btn" type="file" name="files" id="upload" style="display: none;" data-url="@Url.Action("UploadEmbryonic", "Attachment", new { area = "" })" accept="*.xlsx" />
                @if (!string.IsNullOrEmpty(Model.Form.EmbryonicLocationName))
                {
                    <input type="button" class="btn btn-default" value="Tải xuống" onclick="download('@Model.Form.FormId')" />
                }

                <input type="button" class="btn btn-info" value="Cấu hình" style="margin-left: 20px" onclick="openConfigEmbryonic('@Model.Form.FormId')" />
                <input type="button" id="createETL" class="btn btn-info" value="Tạo ETL" style="margin-left: 20px" />
                <input type="button" id="createFormMobile" class="btn btn-info" value="Tạo Form Mobile" style="margin-left: 20px" />
                <input type="button" id="deleteForm" class="btn btn-danger" value="Xóa biêu mẫu" style="margin-left: 20px" />
            </td>
        </tr>
    }

</table>
<div id="configEmbryonicForm" class="hidden">
    <iframe id="ereport" src="/admin/Form/ConfigReport?id=@Model.Form.FormId" width="1050" height="577" style="border:none;"></iframe>
</div>
