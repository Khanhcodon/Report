@{
    Layout = null;
    var isDemo = (bool)(ViewBag.IsDemo?? false);
}

<link href="/Content/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
<link href="/Content/bkav.egov/egov.custom.css" rel="stylesheet" />
<link href="/Content/bkav.egov/calendar/calendar.css?v=1" rel="stylesheet" />

<style type="text/css">
    .timestart {
        font-weight: normal;
    }

    .tbody_view_calendar .userPrimaryList {
        font-size: 22px;
    }

    .container-view-tv-fluid table {
        font-size: 22px;
    }

    .clock {
        height: 50px;
        position: absolute;
        right: 40px;
        top: 10px;
        font-size: 48px;
        line-height: 50px;
        color: #ec1f26;
    }

    .removeUser {
        display: none;
    }

    .tb {
        overflow-y: auto;
    }

        .tb::-webkit-scrollbar {
            display: none;
        }
        @if (isDemo)
        {
            <text>
        
            .head-top-calender{
                display:none;
            }
        
            </text>
        }

</style>

<div class="container-fluid container-view-tv-fluid">
    <div class="head-top-calender head-view-tv-calendar">
        <img src="../../content/bkav.egov/calendar/images/QH.png" height="60" width="60" class="logo-view-tv-calendar" />
        <h4 class="boldtext pull-left title-view-tv-calendar">
            @ViewBag.OfficeName
        </h4>
        <p class="title-view-tv-calendar-right hidden">
            CỘNG HOÀ XÃ HỘI CHỦ NGHĨA VIỆT NAM<br />
            Độc lập - Tự do - Hạnh phúc<br />
            -------------------------------
        </p>
    </div>
    <p class="title-view-tv-calendar-center">
        LỊCH CÔNG TÁC NGÀY
    </p>
    <div class="clock pull-right">
        <canvas id="canvas" width="100" height="100"
                style="background-color:transparent; "></canvas>
    </div>
    <div>
        <div class="">
            <table class="table table-bordered">
                <colgroup>
                    <col style="width: 150px" />
                    <col style="min-width: 350px" />
                    <col style="width: 300px" />
                    <col style="width: 150px" />
                </colgroup>
                <thead>
                    <tr>
                        <th class="style-th-view">Thời gian</th>
                        <th class="style-th-view">Nội dung</th>
                        <th class="style-th-view text-center">Chủ trì</th>
                        <th class="style-th-view text-center">Địa điểm</th>
                    </tr>
                </thead>
            </table>
        </div>
        <div class="tb">
            <table class="table table-bordered">
                <colgroup>
                    <col style="width: 150px" />
                    <col style="min-width: 350px" />
                    <col style="width: 300px" />
                    <col style="width: 150px" />
                </colgroup>
                <tbody id="tbody_calendar" class="tbody_view_calendar">
                    <tr></tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<script src="/Scripts/bkav.egov/mvendor.min.js"></script>
<script type="text/javascript">
    $(function () {
        _getData(function (result, now) {
            $(".title-view-tv-calendar-center").text("LỊCH CÔNG TÁC NGÀY " + now);
            if (result.length == 0) {
                var isAm = new Date().getHours() <= 12;
                $("#tbody_calendar").html('<tr><td colspan="4">Không có lịch họp vào buổi ' + (isAm ? "sáng" : "chiều") + '.</td></tr>');
            } else {
                $("#tbody_calendar").html($.tmpl($("#calendarTemplate"), result));
            }
            $(".viewDetail").hide();
        });

        $(".tb").height($(".container-view-tv-fluid").height() - 185);

        showClock();

        setInterval(showClock, 1000);
        setInterval(function () {
            window.location.reload();
        }, 10 * 60 * 1000);

        anim();
    });

    function showClock() {
        var date = new Date();
        var minutes = date.getMinutes();
        if (minutes < 10) {
            minutes = "0" + minutes;
        }

        var second = date.getSeconds();
        if (second < 10) {
            second = "0" + second;
        }

        var timeString = date.getHours() + ":" + minutes + ":" + second;
        $(".clock").text(timeString);
    }

    function _getData(success) {
        $.ajax({
            url: '/Calendar/GetToday',
            type: "Get",
            beforeSend: function () {
                $("#tbody_calendar").empty();
            },
            success: function (result) {
                var groups = _.groupBy(result.data, 'Date');
                var data = [];
                _.each(groups, function (group, key) {
                    var rowSpan = group.length + 1; // 1 là row mặc định của group
                    _.each(group, function (calendar) {
                        // console.log(delete calendar.Contents[0].Note);
                        if (calendar.Contents.length > 1) {
                            rowSpan += calendar.Contents.length;
                        }
                    });

                    data.push({
                        Date: key,
                        BeginTime: group[0].BeginTime,
                        IsAdmin: false,
                        IsView: true,
                        Count: rowSpan,
                        Calendars: group
                    });
                });

                data = _.sortBy(data, "BeginTime");

                success(data, result.from, result.to);
            },
            error: function (xhr) {
                console.log(xhr);
            },
            complete: function () {

            }
        });
    }

    var $el = $(".tb");
    function anim() {
        var st = $el.scrollTop();
        var sb = $el.prop("scrollHeight") - $el.innerHeight();
        $el.animate({ scrollTop: st < sb / 2 ? sb : 0 }, 10000, anim);
    }
    function stop() {
        $el.stop();
    }

    var canvas = document.getElementById("canvas");
    var ctx = canvas.getContext("2d");
    var radius = canvas.height / 2;
    ctx.translate(radius, radius);
    radius = radius * 0.90

    function drawClock() {
        drawFace(ctx, radius);
        drawNumbers(ctx, radius);
        drawTime(ctx, radius);
    }

    function drawFace(ctx, radius) {
        var grad;
        ctx.beginPath();
        ctx.arc(0, 0, radius, 0, 2 * Math.PI);
        ctx.fillStyle = 'white';
        ctx.fill();
        grad = ctx.createRadialGradient(0, 0, radius * 0.95, 0, 0, radius * 1.05);
        grad.addColorStop(0, '#988686');
        grad.addColorStop(0.5, '#fff');
        grad.addColorStop(1, '#988686');
        ctx.strokeStyle = grad;
        ctx.lineWidth = radius * 0.05;
        ctx.stroke();
        ctx.beginPath();
        ctx.arc(0, 0, radius * 0.1, 0, 2 * Math.PI);
        ctx.fillStyle = '#36363a';
        ctx.fill();
    }

    function drawNumbers(ctx, radius) {
        var ang;
        var num;
        ctx.font = radius * 0.15 + "px arial";
        ctx.textBaseline = "middle";
        ctx.textAlign = "center";
        for (num = 1; num < 13; num++) {
            if (num % 3 != 0) {
                // continue;
            }
            ang = num * Math.PI / 6;
            ctx.rotate(ang);
            ctx.translate(0, -radius * 0.85);
            ctx.rotate(-ang);
            ctx.fillText(num.toString(), 0, 0);
            ctx.rotate(ang);
            ctx.translate(0, radius * 0.85);
            ctx.rotate(-ang);
        }
    }

    function drawTime(ctx, radius) {
        var now = new Date();
        var hour = now.getHours();
        var minute = now.getMinutes();
        var second = now.getSeconds();
        //hour
        hour = hour % 12;
        hour = (hour * Math.PI / 6) +
        (minute * Math.PI / (6 * 60)) +
        (second * Math.PI / (360 * 60));
        drawHand(ctx, hour, radius * 0.5, radius * 0.07);
        //minute
        minute = (minute * Math.PI / 30) + (second * Math.PI / (30 * 60));
        drawHand(ctx, minute, radius * 0.8, radius * 0.07);
        // second
        second = (second * Math.PI / 30);
        drawHand(ctx, second, radius * 0.9, radius * 0.02);
    }

    function drawHand(ctx, pos, length, width) {
        ctx.beginPath();
        ctx.lineWidth = width;
        ctx.lineCap = "round";
        ctx.moveTo(0, 0);
        ctx.rotate(pos);
        ctx.lineTo(0, -length);
        ctx.stroke();
        ctx.rotate(-pos);
    }
</script>

<script type="text/x-jquery-tmpl" id="calendarTemplate">
    {{each Calendars}}
    <tr>
        <td class="text-center"><span class="">${Time}</span></td>
        <td>
            <span class="title" style="color: #ce0000; font-weight:bold;">
                ${TitlePublish}
                {{if Contents[0].Content != ''}}
                <br />${Contents[0].Content}
                {{/if}}
            </span>
        </td>
        <td class="text-center">
            <div class="userPrimaryList list-group">
                {{html UserPrimaryPublish}}
            </div>
        </td>
        <td class="text-center">
            ${PlacePublish}
        </td>
    </tr>
    {{/each}}
</script>
