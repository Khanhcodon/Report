@*Tạo mới, sửa loại hồ sơ liên quan đến hồ sơ 1 cửa*@
@model DocTypeModel
@Html.HiddenFor(model => model.StoreIds)
@Html.HiddenFor(model => model.DocTypeId)
@{
    var allDocFields = ViewBag.AllDocFields as IEnumerable<DocFieldModel>;
    var allCategorys = ViewBag.AllCategorys as IEnumerable<CategoryModel>;
    var allCodes = ViewBag.AllCodes as IEnumerable<CodeModel>;


    var allStores = ViewBag.AllStores as IEnumerable<StoreModel>;
    var storeIds = ViewBag.StoreIds as List<int>;
    var strStoreIds = "";
    if (storeIds != null && storeIds.Any())
    {
        foreach (var docTypeStore in storeIds)
        {
            strStoreIds = strStoreIds == "" ? strStoreIds + docTypeStore : strStoreIds + ";" + docTypeStore;
        }
    }
}

<script src="../../../../Scripts/bkav.egov/libs/tinymce/tinymce.min.js"></script>

<script>
    tinyMCE.init({
        mode: "exact",
        selector: "#txtTextArea",
        language: "vi",
        height: "300",
        width: "800",
        theme: "modern",
        plugins: [
            "advlist autolink lists link image charmap print preview hr anchor pagebreak",
            "searchreplace wordcount visualblocks visualchars code fullscreen",
            "insertdatetime media nonbreaking save table contextmenu directionality",
            "emoticons template paste textcolor colorpicker textpattern"
        ],
        toolbar1: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image",
        toolbar2: "print preview media | forecolor backcolor emoticons",
        image_advtab: true,
        readonly: false
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("form").submit(function () {
            var strStoreIds = "";
            $(".checkItemStore").each(function () {
                if ($(this).is(':checked')) {
                    strStoreIds = strStoreIds == "" ? strStoreIds + $(this).attr('id') : strStoreIds + ';' + $(this).attr('id');
                }
            });
            $("#StoreIds").val(strStoreIds);
            $(this).find('input.input-validation-error').first().focus();
        });
    });
</script>

<table>
    <tr class="hidden">
        <td style="width: 250px;">
            @Html.LabelFor(model => model.CategoryId):
        </td>
        <td>
            @Html.DropDownListFor(model => model.CategoryId, new SelectList(allCategorys, "CategoryId", "CategoryName"))
        </td>
    </tr>
    <tr>
        <td>
            <label style="width: 20%">Kỳ báo cáo</label>
        </td>
        <td>
            @Html.DropDownListFor(model => model.ActionLevel, (IEnumerable<SelectListItem>)ViewBag.ListActionLevel)
        </td>
    </tr>
    <tr>
    <td>
        @Html.LabelFor(model => model.LevelId):
    </td>
    <td>

        @Html.DropDownListFor(model => model.LevelId, (IEnumerable<SelectListItem>)ViewBag.ListLevel, new { @id = "productitem", style = "width:200px" })
    </td>
</tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.DocFieldId)
        </td>
        <td>
            @Html.DropDownListFor(model => model.DocFieldId, new SelectList(allDocFields, "DocFieldId", "DocFieldName"))
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.ReportModeId)
        </td>
        <td>
            @Html.DropDownListFor(model => model.ReportModeId, new SelectList(ViewBag.AllReportModel, "ReportModeId", "Name",0), new { @class = "form-control" })
        </td>
    </tr>
    <tr>
        <td>
            <label>Tên báo cáo</label>
        </td>
        <td>
            @Html.TextAreaFor(model => model.DocTypeName, new Dictionary<string, object>() { })
        </td>
    </tr>
    <tr class="hidden">
        <td>
            @Html.LabelFor(model => model.Content)
        </td>
        <td>
            @Html.TextBoxFor(model => model.Content, new { @class = "form-control", id = "txtTextArea" })
        </td>
    </tr>
    <tr>
        <td>
            Tiêu đề báo cáo
        </td>
        <td>
            @Html.TextBoxFor(model => model.CompendiumDefault)
        </td>
    </tr>

    <tr class="hidden">
        <td>
            @Html.LabelRequireFor(model => model.DocTypePermission)
        </td>
        <td>
            @(Html.CheckboxListForEnum("DoctypePermissions", Model.DocTypePermissionInEnum ?? 0))
            @Html.ValidationMessageFor(model => model.DoctypePermissions)
        </td>
    </tr>
    <tr class="hidden">
        <td></td>
        <td>
            @Html.CheckBox("IsAllowOnline", Model.IsAllowOnline.GetValueOrDefault())
            @Html.LabelFor(model => model.IsAllowOnline)
        </td>
    </tr>
    <tr>
        <td></td>
        <td>
            @Html.CheckBoxFor(model => model.IsActivated)
            @Html.LabelFor(model => model.IsActivated)
        </td>
    </tr>
    <tr class="hidden">
        <td></td>
        <td>
            @Html.CheckBoxFor(model => model.HasOverdueInNode)
            <label for="HasOverdueInNode">Không tính hạn giữ khi báo cáo, thống kê</label>
        </td>
    </tr>
    <tr class="hidden">
        <td>
            @Localizer("Bkav.eGovCloud.Areas.Admin.Doctype.Store.List")
            <br />
            @Localizer("Bkav.eGovCloud.Areas.Admin.Doctype.Store.Save.IsAllowed")
        </td>
        <td>
            <table class="table-main table" id="tblStore">
                <colgroup>
                    <col style="width: 40px" />
                    <col />
                    <col style="width: 50px" />
                </colgroup>
                <thead>
                    <tr>
                        <th class="header-unresize text-center">
                            <input type="checkbox" id="checkAllStore" @(allStores != null && allStores.Any() && storeIds != null && storeIds.Any() && allStores.Count() == storeIds.Count ? "checked='checked'" : "") />
                        </th>
                        <th class="header-unresize">
                            @Localizer("Bkav.eGovCloud.Areas.Admin.Doctype.StoreName")
                        </th>
                        <th class="header-unresize">Xem</th>
                    </tr>
                </thead>
                <tbody>
                    @if (allStores != null && allStores.Any())
                    {
                        foreach (var store in allStores)
                        {
                            <tr>
                                <td align="center">
                                    @{    if (storeIds != null && storeIds.Any())
                                        {
                                            <input type="checkbox" id="@store.StoreId" @(storeIds.Contains(store.StoreId) ? "checked='checked'" : "") class="checkItemStore" />
}
                                        else
                                        {
                                            <input type="checkbox" id="@store.StoreId" class="checkItemStore" />
}
                                    }
                                </td>
                                <td>
                                    @store.StoreName
                                </td>
                                <td>
                                    <a href="/admin/Store/Edit/@store.StoreId">Xem</a>
                                </td>
                            </tr>      }
                                        }
                                        else
                                        {
                                            <tr>
                                                <td colspan="2">
                                                    @Localizer("Bkav.eGovCloud.Areas.Admin.Doctype.Store.List.Null")
                                                </td>
                                            </tr>}
                </tbody>
            </table>
        </td>
    </tr>
</table>