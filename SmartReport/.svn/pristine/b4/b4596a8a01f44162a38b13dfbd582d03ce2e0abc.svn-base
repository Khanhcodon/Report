@if (Request.IsAuthenticated)
{
    <text>
        @*<strong>@User.Identity.Name</strong>
            [<a onclick="logout()">@Localizer("Common.Label.Logout")</a>]*@

        <div class="btn-group pull-right" style="width: 70px">
            <a id="current-user" class="btn navbar-tool dropdown-toggle pull-right" data-toggle="dropdown" title="demo" href="#" style="height: 45px;">
                <img class="avatar"
                     src="@Url.Content(string.IsNullOrEmpty(ViewBag.Avatar) ? "~/AvatarProfile/noavatar.jpg" : ViewBag.Avatar)"
                     onerror="this.src = '@Url.Content("~/AvatarProfile/noavatar.jpg")'" />
            </a>
            <ul class="dropdown-menu">
                <li>
                    <a href="#" onclick="logout()">
                        <i class="fa icon-logout"></i>
                        @Localizer("Common.Label.Logout")
                    </a>
                </li>
            </ul>
        </div>
    </text>
}

<script>
    function logout() {
        var connect = localStorage.getItem("connectionSettings");
        var domainDocument = document.domain;
        if (connect) {
            var objectConnect = JSON.parse(connect);
            domainDocument = objectConnect.ParentDomain;
        }
        var cookies = document.cookie.split(";");
        for (var i = 0; i < cookies.length; i++) {
            var eqPos = cookies[i].indexOf("=");
            var name = eqPos > -1 ? cookies[i].substr(0, eqPos) : cookies[i];
            name = name.trim();
            $.cookie(name, "", { domain: domainDocument, path: "/", expires: -1 });
            $.cookie(name, "", { expires: -1 });
            var cookieCheck = getCookie(name);
            if (cookieCheck != null) {
                $.cookie(name, "", { domain: document.domain, path: "/", expires: -1 });
                $.cookie(name, "", { expires: -1 });
                $.cookie("egov", null, { path: '/' });
            }
        }

        if (typeof currentUserName !== 'undefined') {
            if (currentUserName !== undefined) {
                $.get(eGovSso + '/User/Logout?userName=' + currentUserName, {});
            }
        }

        logoutDesktop();

        window.document.location.href = "/account/logout";
    }

    function logOutServer(theUrl) {
        var xmlHttp = new XMLHttpRequest();
        xmlHttp.open("GET", theUrl, false); // false for synchronous request
        xmlHttp.send(null);
        return xmlHttp.responseText;
    }

    window.logoutDesktop = function () {
        if (typeof window.external.CB_LoginSuccess == "function") {
            var data = [];
            var loginObj = {
                user: currentUserName,
                password: "",
                remember: "true"
            }

            data.push(loginObj);

            var myJsonString = JSON.stringify(data);
            window.external.CB_LoginSuccess(myJsonString);
        }
    }

    function getCookie(name) {
        var dc = document.cookie;
        var prefix = name + "=";
        var begin = dc.indexOf("; " + prefix);
        if (begin == -1) {
            begin = dc.indexOf(prefix);
            if (begin != 0) return null;
        }
        else {
            begin += 2;
            var end = document.cookie.indexOf(";", begin);
            if (end == -1) {
                end = dc.length;
            }
        }
        // because unescape has been deprecated, replaced with decodeURI
        //return unescape(dc.substring(begin + prefix.length, end));
        return decodeURI(dc.substring(begin + prefix.length, end));
    }

</script>