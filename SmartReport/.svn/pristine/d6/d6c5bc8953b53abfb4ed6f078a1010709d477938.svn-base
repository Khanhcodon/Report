@model IEnumerable<CategoryModel>
@{
    var sortAndPage = ViewBag.SortAndPage as Bkav.eGovCloud.Admin.Models.SortAndPagingModel;
    var allCategoryBusiness = ViewBag.AllCategoryBusiness as List<SelectListItem>;

    //var firstItem = allCategoryBusiness.FirstOrDefault(t => t.Selected); 
    var listPageSize = ViewBag.ListPageSize as List<int>;
    //var categoryBusinessIdSelected = firstItem == null ? 0 : Convert.ToInt32(firstItem.Value);
    var number = (sortAndPage.CurrentPage - 1) * sortAndPage.PageSize;  
}
<script type="text/javascript">
    $(function () {
        $("#tblCategory").grid({
            isResizeColumn: true,
            isFixHeightContent: false
        });
        $("#tblCategory").openLink({ urlOpen: '/admin/Category/Edit' });
        $(".table-main").addClass("table-bordered table-hover");
    });
</script>

<table class="table-main table" id="tblCategory">
    <colgroup>
        <col style="width: 50px" />
        <col />
        <col style="width: 50px" />
        <col style="width: 50px" />
    </colgroup>
    <thead>
        <tr>
            <th class="header">
                @Localizer("Bkav.eGovCloud.Areas.Admin.Category.Index.List.Column.Numbers")
            </th>
            <th class="header">
                @Ajax.SortLink("CategoryName", Localizer("Bkav.eGovCloud.Areas.Admin.Category.Index.List.Column.CategoryName"),
                                sortAndPage.SortBy, sortAndPage.IsSortDescending,
                                "SortAndPaging", "sort asc", "sort desc",
                                new
                                    {
                                        page = sortAndPage.CurrentPage,
                                        pageSize = sortAndPage.PageSize,
                                        searchName = ViewBag.SearchName,
                                        categoryBusinessId = ViewBag.CategoryBusinessId,
                                    },
                                new AjaxOptions
                                    {
                                        UpdateTargetId = "divListCategorys",
                                        OnBegin = "onBegin",
                                        OnSuccess = "onSuccess",
                                        OnFailure = "onFailure"
                                    })
            </th>
            <th class="header">
                @Localizer("Bkav.eGovCloud.Areas.Admin.Category.Index.List.Column.Edit")
            </th>
            <th class="header">
                @Localizer("Bkav.eGovCloud.Areas.Admin.Category.Index.List.Column.Delete")
            </th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            foreach (var Category in Model)
            {
                number += 1;
            <tr data-id="@Category.CategoryId">
                <td>@number
                </td>
                <td>@Category.CategoryName
                </td>
                <td>
                    @Html.ActionLink(Localizer("Bkav.eGovCloud.Areas.Admin.Category.Index.List.Column.Edit.Button"), "Edit", new { Id = Category.CategoryId })
                </td>
                <td>
                    <a href="javascript:deleteCategory(@(Category.CategoryId))">@Localizer("Bkav.eGovCloud.Areas.Admin.Category.Index.List.Column.Delete.Button")</a>
                    <form id="formdelete@(Category.CategoryId)" style="display: none" action="@Url.Action("Delete", new { Id = Category.CategoryId })" method="POST">
                        @Html.AntiForgeryToken()
                    </form>
                </td>
            </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="4">@Localizer("Bkav.eGovCloud.Areas.Admin.Category.Index.List.Null")
                </td>
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <td class="grid-pager grid-pager-wrap grid-pager-top" style="@(Model != null && Model.Any() ? "" : "display:none;")">
                @Ajax.Pager(sortAndPage.PageSize, sortAndPage.CurrentPage,
                              sortAndPage.TotalRecordCount, "SortAndPaging",
                              "pagerButton", "pagerButtonDisabled", "pagerButtonCurrentPage",
                              new
                                  {
                                      sortBy = sortAndPage.SortBy,
                                      isSortDesc = sortAndPage.IsSortDescending,
                                       searchName = ViewBag.SearchName,
                                        categoryBusinessId = ViewBag.CategoryBusinessId,
                                  },
                              new AjaxOptions
                                  {
                                      UpdateTargetId = "divListCategorys",
                                      OnBegin = "onBegin",
                                      OnSuccess = "onSuccess",
                                      OnFailure = "onFailure"
                                  }, listPageSize)
            </td>
        </tr>
    </tfoot>
</table>
