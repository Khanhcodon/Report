@model Bkav.eGovCloud.Models.DocumentOnlineModel
@{
    Layout = null;
    var jsonxyz = @Html.Raw(Model.Json);
}

<link href="../../Content/themes/base/jquery.ui.all.css" rel="stylesheet" />
<link href="../../Content/bootstrap.min.css" rel="stylesheet" />
<link href="../../Content/DocumentOnline.css" rel="stylesheet" />
<link href="../../Scripts/bkav.egov/libs/eForm/css/eformTn.css" rel="stylesheet" />

<script src="../../Scripts/bkav.egov/libs/jquery/jquery-1.7.2.min.js"></script>
<script src="../../Scripts/bkav.egov/libs/jquery/jquery-ui-1.8.22.min.js"></script>
<script src="../../Scripts/bkav.egov/libs/knockout/knockout-2.2.0.js"></script>
<script src="../../Scripts/bkav.egov/libs/eForm/jquery/jquery.global.js"></script>
<script src="../../Scripts/bkav.egov/libs/eForm/jsutilt.js"></script>
<script src="../../Scripts/bkav.egov/libs/eForm/eForm.Libdata.js"></script>
<script src="../../Scripts/bkav.egov/libs/eForm/eForm.Controls.js"></script>
<script src="../../Scripts/bkav.egov/libs/eForm/eForm.Lib.js"></script>
<script src="../../Scripts/bkav.egov/libs/eForm/eForm.DB.js"></script>
<script src="../../Scripts/bkav.egov/libs/eForm/eForm.Tool.js"></script>
<script src="../../Scripts/bkav.egov/libs/eForm/Resize.js"></script>
<script src="../../Scripts/bkav.egov/libs/eForm/bkav.egate.applet.js"></script>
<script src="../../Scripts/bkav.egov/libs/eForm/bkav.egate.js"></script>
<script src="../../Scripts/bkav.egov/libs/eForm/bkav.egate.compiler.js"></script>

<script>    
    var jsonModel  = @(string.IsNullOrEmpty(@Model.JsonForm) ? MvcHtmlString.Create("{}") : Html.Raw(@Model.JsonForm));
    var totalResult="@ViewBag.Result";
    $(function () {
        $(".reg-lefts div:not(.reg-left-stitle)").click(function () {
            $(".reg-lefts div").removeClass("selected");
            $(this).addClass("selected");
            var id = $(this).attr("id");
            $(".reg-rights > div").hide();
            $("." + id).show();
        });
        $(".reg-back-btn").click(function () {
            var backStep = $(event.target).closest(".step").index() + 1;
            $(".reg-lefts div").removeClass("selected");
            $(".reg-lefts div:nth-child(" + backStep + ")").addClass("selected");
            $(".reg-rights > div").hide();
            $(".reg-rights > div:nth-child(" + (backStep - 1) + ")").show();
        });
        $(".reg-next-btn").click(function () {
            var nextStep = $(this).closest(".step").index() + 3;
            $(".reg-lefts div").removeClass("selected");
            $(".reg-lefts div:nth-child(" + nextStep + ")").addClass("selected");
            $(".reg-rights > div").hide();
            $(".reg-rights > div:nth-child(" + (nextStep - 1) + ")").show();
        });
        //var doc = new jsPDF();
        //var specialElementHandlers = {
        //    '#editor': function (element, renderer) {
        //        return true;
        //    }
        //};
        $("#no-sign").click(function () {
            if(saveJsonSerialize()){
                $("form").submit();
            }
        });
        $("#sign").click(function () {
            $(".reg-lefts div").removeClass("selected");
            $(".reg-rights > div").hide();
            $(".reg-lefts #fourth-step").addClass("selected");
            $(".reg-rights > .fourth-step").show();
        });
        getForm($("#forms"));
        $(".step").hide();
        if(totalResult=="True"){
            $(".reg-lefts div").removeClass("selected");
            $("#final-step").addClass("selected");
            $(".final-step").show();
        }else {
            $(".reg-lefts div").removeClass("selected");
            $("#first-step").addClass("selected");
            $(".first-step").show();
        }
    });
    var saveJsonSerialize = function () {
        if (!validateAll()) {
            return false;
        }
        jsonSerializeAll();
        return true;
    };
    var bindForm = function (model, divRoot, isView) {
        // Khởi tạo efTools
        eForm.Lib.Init();
        eForm.efTools.init(null, divRoot, model.formid);
        // Tạo danh mục catatalog
        fformModel.fromCatalog(model.collections); // egate.compiler.js
        // Chuẩn bị view cho form động + tạo database cho form động từ model.schema
        if (isView) {
            eForm.efTools.ViewForm(model.schema, model.maxRow); // eForm.Tool.js
        }
        else {
            eForm.efTools.LoadForm(model.schema, model.maxRow); // eForm.Tool.js
        }
        // Chuẩn bị model cho form động
        var partModel = fformModel.fromSchema(eForm.database.GetAll(model.formid), model.formid); // egate.compiler.js
        $.extend(fformModel, partModel);
        //// Dùng knockoutjs gắn view + model vào với nhau để hiển thị lên web.
        ko.applyBindings(fformModel, document.getElementById(divRoot));
        
        
    };
    var getForm = function (target) {
        for (var i = 0; i < jsonModel.length; i++) {
            var itemModel = {
                collections: jsonModel[i].JssCatalog,
                schema: jsonModel[i].JssForm,
                formid: jsonModel[i].FormId,
                maxRow: jsonModel[i].MaxRow
            };
            target.addClass("pnl_root sub_pnl_root").append("<div id='div" + jsonModel[i].FormId + "'></div>")
            bindForm(itemModel, "div" + jsonModel[i].FormId, false);
            var starti = 0;
            var json = JSON.parse('@jsonxyz');
            $('#forms .icontainer div input.ffield').each(function(){
                $(this).val(json[starti].DocFieldJson[0].Value);
                starti++;
            });
        }
    };
    var validateAll = function () {
        var isValid = true;
        var invalidObj = null;
        $('.ffield').each(function () {
            $(this).blur();
        });
        $('.cssErr').each(function () {
            if ($(this).css('display') != 'none' && isValid) {
                invalidObj = $(this);
                isValid = false;
            }
        });
        if (!isValid) {
            $('#' + invalidObj.attr('controlValidate')).focus();
            return false;
        }
        return true;
    };

    var jsonSerializeAll = function () {
        var contentObj = $("#forms");
        contentObj.each(function () {
            var formObj = $(this).parent();
            var formTmp = formObj.find("#Json").val();
            var result = [];
            if (formTmp != "") {
                var json = JSON.parse(formTmp);
                for (var i = 0; i < json.length; i++) {
                    var json = JSON.parse(formTmp);
                    var formJson = "{";
                    var docFieldJson = eForm.database.JsonSerialize3(json[i].FormId);
                    formJson += "\"FormId\": \"" + json[i].FormId + "\",";
                    formJson += "\"GlobalCode\":\"" + json[i].GlobalCode + "\",";
                    formJson += "\"Description\":\"" + json[i].Description + "\",";
                    formJson += "\"DocFieldJson\":" + docFieldJson;
                    formJson += "}";
                    var form = JSON.parse("{}");
                    form.Content = formJson;
                    form.ContentName = $(this).parent().find(".subformTitle .formName").text();
                    form.FormTypeId = 2;
                    form.IsMain = $(this).parent().attr("id") == "mainForm";
                    //var docContentId = parseInt(contentId) != contentId ? 0 : contentId;
                    //form.DocumentContentId = docContentId;
                    result.push(formJson);
                }
                formObj.find("#Json").val("["+result+"]");
            }
        });
    };

    function closeSelf() {
        parent.window.postMessage("removetheiframe", "*");
    }
</script>
<div class="reg-lefts col-md-3">
    <div class="reg-lefts-title">BỐ SUNG HỒ SƠ TRỰC TUYẾN</div>
    <div id="first-step" class="selected">Thông tin công dân / Doanh nghiệp</div>
    <div id="second-step">Khai vào mẫu </div>
    <div id="third-step">Gửi hồ sơ</div>
    <div id="fourth-step">Ký và bổ sung</div>
    <div id="final-step">Hoàn tất bổ sung</div>
    <div id="reg-cancel" onclick="closeSelf()">Hủy Bổ sung</div>
</div>
@using (Html.BeginForm("Edit", "DocumentOnline", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="reg-rights col-md-9">
        <div class="first-step step">
            <div class="form-group">
                <label><span style="color: Red">(*)  Thông tin bắt buộc phải nhập</span></label>
            </div>
            <div class="form-group">
                <label>@Localizer("Common.DocumentOnline.FirstStep.Field.FullName.Label")<span style="color: Red; font-size: 11px;">(*)</span>
                </label>
                <div>
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.DocTypeId)
                    @Html.HiddenFor(model => model.Email)
                    @Html.TextBoxFor(model => model.PersonInfo, new { @class = "form-control", @placeholder = Localizer("Common.DocumentOnline.FirstStep.Field.FullName.Label") })
                    @Html.ValidationMessageFor(model => model.PersonInfo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label>@Localizer("Common.DocumentOnline.FirstStep.Field.IdCardNumber.Label")<span style="color: Red; font-size: 11px;">(*)</span></label>
                <div>@Html.TextBoxFor(model => model.IdCard, new { @class = "form-control", @placeholder = Localizer("Common.DocumentOnline.FirstStep.Field.IdCardNumber.Placeholder") })
                    @Html.ValidationMessageFor(model => model.IdCard, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label>
                    @Localizer("Common.DocumentOnline.FirstStep.Field.Email.Label")
                </label>
                <div>
                    @Html.DisplayFor(model => model.Email, new { @class = "form-control", @placeholder = Localizer("Common.DocumentOnline.FirstStep.Field.Email.Label") })
                </div>
            </div>
            <div class="form-group">
                <label>
                    @Localizer("Common.DocumentOnline.FirstStep.Field.PhoneNumber.Label")<span style="color: Red; font-size: 11px;">(*)</span>
                </label>
                <div>
                    @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", @placeholder = Localizer("Common.DocumentOnline.FirstStep.Field.PhoneNumber.Label") })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label>@Localizer("Common.DocumentOnline.FirstStep.Field.Address.Label")</label>
                <div>
                    @Html.TextAreaFor(model => model.Address, new { @class = "form-control", @placeholder = Localizer("Common.DocumentOnline.FirstStep.Field.Address.Label") })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <input type="button" value="Tiếp" class="btn reg-next-btn" style="float: right; margin-right: 150px" />
            </div>
        </div>
        <div class="second-step step">
            <label><span style="color: Red">(*)  Thông tin bắt buộc phải nhập</span></label>
            @Html.HiddenFor(model => model.Json)
            <div id="forms"></div>
            <div class="form-group" style="clear: both">
                <input type="button" value="Quay lại" class="btn reg-back-btn" style="margin-left: 25%;" />
                <input type="button" value="Tiếp" class="btn reg-next-btn" style="float: right; margin-right: 150px" />
            </div>
        </div>
        <div class="third-step step">
            <div class="form-group">
                <div class="reg-step-head">Hồ sơ yêu cầu các giấy tờ đính kèm sau, vui lòng tải file đính kèm lên</div>
                <div class="reg-step-body">
                    <style>
                        li {
                            list-style-type: none;
                        }
                    </style>
                    @if (Model.Doctype.DoctypePapers.Any())
                    {
                        <ul>
                            @foreach (var paper in Model.Doctype.DoctypePapers)
                            {
                                <li>Bản scan @paper.Paper.PaperName
                                </li>
                            }
                        </ul>
                        @Html.TextBoxFor(model => model.PostedFiles, new { type = "file", multiple = "multiple" })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    }
                    else
                    {
                        <span>Không có giấy tờ cần kèm theo</span>
                        @Html.HiddenFor(model => model.PostedFiles)
                    }
                </div>
                <div class="reg-step-head" style="padding-top: 50px;">Chú ý</div>
                <div class="reg-step-body">
                    <span>Nếu <strong>Bổ sung thông thường</strong> Quý khách vui lòng nhấn <strong>Bổ sung</strong> Để hoàn tất việc gửi hồ sơ</span>
                    <span>Nếu <strong>Dùng chữ ký số</strong> Quý khách vui lòng nhấn <strong>Bổ sung</strong> Để hoàn tất việc gửi hồ sơ</span>
                </div>
                <div class="btn" id="no-sign" style="margin-left: 25%;">Bổ sung</div>
                <div class="btn" id="sign" style="float: right; margin-right: 150px">Ký và bổ sung</div>
            </div>
        </div>
        <div class="fourth-step step">
            <div class="form-group">
                <input type="button" value="Quay lại" class="btn reg-back-btn" style="margin-left: 25%;" />
                <input type="button" value="Tiếp" class="btn reg-next-btn" style="float: right; margin-right: 150px" />
            </div>
        </div>
        <div class="final-step step">
            <div class="reg-step-head">Ông / Bà đã sửa hồ sơ thành công</div>
            <div class="reg-step-head blur">Thông tin hồ sơ</div>
            <div class="reg-step-body">
                <span>Mã hồ sơ tạm thời: <strong>@Html.DisplayFor(model => model.DocCode)</strong></span>
                <span>( Mã hồ sơ chính sẽ được cấp lại ngay sau khi cơ quan một cửa chấp nhận xử lý hồ sơ của Ông / Bà )</span>
                <span>Thời gian xử lý hồ sơ: trong vòng <strong>7 ngày</strong> kể từ ngày hồ sơ được chấp nhận xử lý tại cơ quan một cửa.</span>
            </div>
            <div class="reg-step-head blur">Công việc cần làm tiếp theo</div>
            <div class="reg-step-body">
                <span>Ông / Bà sẽ nhận được một Thư điện tử thông báo về Mã hồ sơ và Ngày giờ hẹn trả chính thức cho hồ sơ đã đăng ký nếu hồ sơ được cơ quan một cửa chấp nhận xử lý.</span>
                <span>Hoặc Ông / Bà sẽ nhận được Thư điện tử từ chối chấp nhận xử lý và Lý do từ chối xử lý hồ sơ từ Cơ quan một cửa nếu hồ sơ không đạt yêu cầu</span>
                <span>Ông / Bà sẽ nhận được một Thư điện tử thông báo về Mã hồ sơ và Ngày giờ hẹn trả chính thức cho hồ sơ đã đăng ký nếu hồ sơ được cơ quan một cửa chấp nhận xử lý.</span>
            </div>
            <div class="form-group">
                <input type="button" id="reg-end-btn" class="btn" style="float: right; margin-right: 150px" value="Hoàn tất đăng ký" onclick="closeSelf()" />
            </div>
        </div>
    </div>
}
