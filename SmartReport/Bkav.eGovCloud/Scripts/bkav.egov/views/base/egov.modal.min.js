define(["text!templates/modal.html"],function(n){"use strict";return egov.views.modal=Backbone.View.extend({className:"modal",template:n,valueConfirm:!1,events:{"click .checkbox.ignore":"ignore","click .close":"_close"},initialize:function(){this.$el.html($.tmpl(this.template,this.model.toJSON()));this.$buttons=this.$(".modal-footer");var n=this;this.$el.on("hidden.bs.modal",function(){typeof n.model.get("hidden")=="function"&&n.model.get("hidden")()});this.$el.on("hide.bs.modal",function(){typeof n.model.get("hide")=="function"&&n.model.get("hide")()});this.$el.on("loaded.bs.modal",function(){typeof n.model.get("loaded")=="function"&&n.model.get("loaded")()});this.$(".modal-body").html(this.model.get("content"));this.render()},render:function(){var n=this.model.toJSON(),i,r,t,u;if(this.$el.modal(n),this.$(".modal-dialog").width(n.width),this.$(".modal-body").height(n.height),n.top&&this.$(".modal-dialog").css("top",n.top),this.$buttons.empty(),this.model.get("footer")&&this.$buttons.append(this.model.get("footer")),this.model.get("confirm")&&this.$buttons.append(this._parseConfirm(this.model.get("confirm"))),i=this.model.get("buttons"),r=i.length,r==0)this.$buttons.hide();else for(t=0;t<r;t++)u=this._parseButton(i[t]),this.$buttons.append(u);if(this.model.get("ignoreText")===""&&this.$(".checkbox.ignore").hide(),this.model.get("draggable")&&typeof $.fn.draggable=="function"&&this.$(".modal-content").draggable({containment:"document",handle:this.$(".modal-header")}),this.model.get("resizeable"))$("#modal").on("show.bs.modal",function(){$(this).find(".modal-body").css({width:"auto",height:"auto","max-height":"100%"})});return this},reRender:function(n){this.model=n;this.render()},ignore:function(n){this.$(".checkbox.ignore").toggleClass("checked");egov.helper.destroyClickEvent(n)},hide:function(){this.$el.modal("hide")},show:function(){this.$el.modal("show")},destroy:function(){this.hide();this.$el.remove()},isIgnore:function(){return this.$(".checkbox.ignore").hasClass("checked")},disableButtons:function(){this.$buttons.find("button").attr("disabled")},enableButtons:function(){this.$buttons.find("button").removeAttr("disabled")},_parseButton:function(n){var t=$("<button>").attr("type","button").addClass("btn"),i;return t.text(n.text),t.attr("data-disable",n.disableProcess?!0:!1),n.className&&n.className!==""?t.addClass(n.className):t.addClass("btn-default"),n.style&&t.css(n.style),n.id&&n.id!==""&&t.attr("id",n.id),n.disabled&&t.attr("disabled","disabled"),i=this,t.click(function(){if(n.disableProcess){var r=i.$buttons.find('button[data-disable="true"]');$(r).each(function(){$(this).attr("disabled","disabled")})}typeof n.click=="function"&&n.click(function(){n.disableProcess&&$(r).each(function(){$(this).removeAttr("disabled")})});t.hasClass("btn-primary")&&i.model.get("confirm")&&typeof i.model.get("confirm").callback=="function"&&i.valueConfirm&&i.model.get("confirm").callback(!i.valueConfirm)}),t},_parseConfirm:function(n){var r='<label> <div class="checkbox document-color">    <input type="checkbox" />     <span class="document-color-1">       <i class="icon-check"><\/i>    <\/span>  <\/div>   <span>'+n.text+"<\/span><\/label>",t=$(r),i;n.id&&n.id!==""&&t.find("input[type='checkbox']").attr("id",n.id);n.name&&t.find("input[type='checkbox']").attr("name",n.name);n.checked&&t.find("input[type='checkbox']").attr("checked","checked");n.disabled&&t.find("input[type='checkbox']").attr("disabled","disabled");n.className&&n.className!==""&&t.addClass(n.className);n.style&&t.css(n.style);i=this;t.find("input[type='checkbox']").on("click",function(){i.valueConfirm=$(this).prop("checked");egov.callback(n.click,i.valueConfirm)});return n.hasAutoClick&&window.setTimeout(function(){t.find("input[type='checkbox']").prop("checked",!0);i.valueConfirm=!0;egov.callback(n.click,!0)},500),t},_close:function(){this.$(".closeDialog, .btn-close, .btn-cancel")?this.$(".closeDialog, .btn-close, .btn-cancel").trigger("click"):this.destroy()}}),egov.views.modal});