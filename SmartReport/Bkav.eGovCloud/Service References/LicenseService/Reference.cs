//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bkav.eGovCloud.LicenseService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LicenseService.ILicenseService")]
    public interface ILicenseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/Register", ReplyAction="http://tempuri.org/ILicenseService/RegisterResponse")]
        string Register(string customerName, string phone, string email, string motherBoardSerial, string cpuProcessorId, string diskDriveSerial, string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/CheckLicense", ReplyAction="http://tempuri.org/ILicenseService/CheckLicenseResponse")]
        bool CheckLicense(string customerName, string phone, string email, string motherBoardSerial, string cpuProcessorId, string diskDriveSerial, System.DateTime activatedOnDate);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILicenseServiceChannel : Bkav.eGovCloud.LicenseService.ILicenseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LicenseServiceClient : System.ServiceModel.ClientBase<Bkav.eGovCloud.LicenseService.ILicenseService>, Bkav.eGovCloud.LicenseService.ILicenseService {
        
        public LicenseServiceClient() {
        }
        
        public LicenseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LicenseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LicenseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LicenseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Register(string customerName, string phone, string email, string motherBoardSerial, string cpuProcessorId, string diskDriveSerial, string key) {
            return base.Channel.Register(customerName, phone, email, motherBoardSerial, cpuProcessorId, diskDriveSerial, key);
        }
        
        public bool CheckLicense(string customerName, string phone, string email, string motherBoardSerial, string cpuProcessorId, string diskDriveSerial, System.DateTime activatedOnDate) {
            return base.Channel.CheckLicense(customerName, phone, email, motherBoardSerial, cpuProcessorId, diskDriveSerial, activatedOnDate);
        }
    }
}
